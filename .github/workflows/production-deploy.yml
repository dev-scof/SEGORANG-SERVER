name: SEGORANG Production Deployment

on:
  push:
    branches:
      - main

env:
  AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
  AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION}}
  AWS_ECR_ACCESS_KEY: ${{ secrets.AWS_ECR_ACCESS_KEY }}
  AWS_ECR_SECRET_KEY: ${{ secrets.AWS_ECR_SECRET_KEY }}
  AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
  AWS_ID: ${{ secrets.AWS_ID }}
  SEGORANG_PROD_HOST: ${{ secrets.SEGORANG_PROD_HOST }}
  SEGORANG_PROD_PORT: ${{ secrets.SEGORANG_PROD_PORT }}
  SEGORANG_PROD_USER: ${{ secrets.SEGORANG_PROD_USER }}
  SEGORANG_PROD_KEY: ${{ secrets.SEGORANG_PROD_KEY }}
  SEGORANG_PROD_ENV_PATH: ${{ secrets.SEGORANG_PROD_ENV_PATH }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  Build_Deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 
      uses: actions/checkout@v3
      
    - name: Download env file from S3
      uses: keithweaver/aws-s3-github-action@v1.0.0
      with:
        command: cp
        aws_access_key_id: ${{ env.AWS_S3_ACCESS_KEY }}
        aws_secret_access_key: ${{ env.AWS_S3_SECRET_KEY }}
        aws_region: ${{ env.AWS_REGION }}
        source: ${{ env.SEGORANG_PROD_ENV_PATH }}
        destination: './segorang-server/.env'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ECR_ACCESS_KEY }}
        aws-secret-access-key: ${{ env.AWS_ECR_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: build and release to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.AWS_ECR_REPOSITORY }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        ls
        cd ./segorang-server
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
    - name: Docker Pull and Server Restart
      uses: appleboy/ssh-action@master
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.AWS_ECR_REPOSITORY }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ID: ${{ env.AWS_ID }}

      with:
        host: ${{ env.SEGORANG_PROD_HOST }}
        port: ${{ env.SEGORANG_PROD_PORT }}
        username: ${{ env.SEGORANG_PROD_USER }}
        key: ${{ env.SEGORANG_PROD_KEY }}
        script_stop: true
        # envs를 통해 env를 포함시켜야 작동한다
        envs: ECR_REGISTRY, ECR_REPOSITORY, IMAGE_TAG, AWS_REGION, AWS_ID
        script: |
          cd segorang && \
          aws ecr get-login-password --region ${AWS_REGION} | \
          docker login --username AWS --password-stdin ${AWS_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com && \
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG && \
          docker image tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG scof/segorang:latest && \
          docker-compose stop segorang-server && \
          docker-compose rm -f segorang-server && \
          docker-compose up -d --no-deps segorang-server